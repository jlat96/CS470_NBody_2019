!path to initial conditions (use local scratch space)
character(*), parameter :: ic_path        = '/scratch/merz/cubep3m/' !'/uber-scratch/merz/cubep3m_64_768_1000Mpc_060926/' !'/scratch/merz/cubep3m/' 

!path to local scratch (for writing temp files)
character(*), parameter :: scratch_path = '/scratch/merz/cubep3m/'

! path to simulation output (use local scratch space)
character(*), parameter :: output_path    = '/scratch/merz/cubep3m/' !_oldkern/' 

! path to cubepm root directory 
character(*), parameter :: cubepm_root    = '/home/merz/codes/cubep3m/'

! nodes / dimension, total nodes = nodes_dim**3
integer(4),   parameter :: nodes_dim      = 4 !6 !4 !1 !6 

! fine mesh tiles / node / dimension
integer(4),   parameter :: tiles_node_dim = 2 !2 !1 !2 !2 !1 !2 

! size of fine mesh tile in cells / dimension
! this must be set as:
!  nf_tile = I*mesh_scale*(nodes_dim)**2 / tiles_node_dim + 2*nf_buf
!   -- where I is an integer 

integer(4),   parameter :: nf_tile        = 176 !192 !48 !144 !176 !112

! boxsize of simulation in Mpc/h
real(4),      parameter :: box            = 100.0 !1000.0

! initial redshift
real(4),      parameter :: z_i            = 200.0

! omega fractions 
real(4),      parameter :: omega_l        = 0.76 
real(4),      parameter :: omega_m        = 1.0 - omega_l
real(4),      parameter :: omega_b        = 0.04 
!real(4),      parameter :: omega_b        = omega_m

! Fine mesh force cut-off in fine mesh cells (determined by kernel)
integer(4),   parameter :: nf_cutoff      = 16

! Fine mesh buffer size in fine mesh cells
integer(4),   parameter :: nf_buf         = nf_cutoff + 8

! number of cells / dimension of entire simulation
integer(4),   parameter :: nc             = (nf_tile-2*nf_buf)*tiles_node_dim*nodes_dim
